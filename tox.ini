[tox]
minversion = 1.6
skipsdist = True
envlist = py34,py27,pep8,pypy

[testenv]
usedevelop=True
whitelist_externals = find
install_command = pip install -U {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
          OS_STDOUT_CAPTURE OS_STDERR_CAPTURE OS_LOG_CAPTURE OS_TEST_TIMEOUT
          PYTHON OS_TEST_PATH LISTOPT IDOPTION
commands =
  find . -type f -name "*.pyc" -delete
  python setup.py test --slowest --testr-args='{posargs}'

[testenv:linters]
commands =
  {toxinidir}/tools/run-bashate.sh
  flake8 {posargs}
  {toxinidir}/tools/validate-all-json.sh
  {toxinidir}/tools/validate-all-yaml.sh
  {toxinidir}/tools/validate-all-maintainer.sh

[testenv:pep8]
commands =
  flake8

[testenv:venv]
commands = {posargs}

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:validate-contents]
commands =
  {toxinidir}/tools/validate-all-json.sh
  {toxinidir}/tools/validate-all-yaml.sh
  {toxinidir}/tools/validate-all-maintainer.sh

[testenv:bashate]
commands =
  {toxinidir}/tools/run-bashate.sh

[testenv:setupenv]
whitelist_externals = bash
commands = bash -c tests/setup_gate.sh

[testenv:build-centos-binary]
whitelist_externals = find
                      bash
                      sudo
setenv =
  DOCKER_BUILD_TEST=1
commands =
  find . -type f -name "*.pyc" -delete
  bash -c "if [ ! -d .testrepository ]; then testr init; fi"
  sudo -E -g docker testr run test_build.BuildTestCentosBinary

[testenv:build-centos-source]
whitelist_externals = find
                      bash
                      sudo
setenv =
  DOCKER_BUILD_TEST=1
commands =
  find . -type f -name "*.pyc" -delete
  bash -c "if [ ! -d .testrepository ]; then testr init; fi"
  sudo -E -g docker testr run test_build.BuildTestCentosSource

[testenv:build-ubuntu-source]
whitelist_externals = find
                      bash
                      sudo
setenv =
  DOCKER_BUILD_TEST=1
commands =
  find . -type f -name "*.pyc" -delete
  bash -c "if [ ! -d .testrepository ]; then testr init; fi"
  sudo -E -g docker testr run test_build.BuildTestUbuntuSource

[testenv:deploy-centos-binary]
whitelist_externals = find
                      bash
                      sudo
setenv =
  DOCKER_BUILD_TEST=1
commands =
  find . -type f -name "*.pyc" -delete
  bash -c "if [ ! -d .testrepository ]; then testr init; fi"
  sudo -E -g docker testr run test_build.DeployTestCentosBinary
  sudo tests/deploy_aio.sh centos binary

[testenv:deploy-centos-source]
whitelist_externals = find
                      bash
                      sudo
setenv =
  DOCKER_BUILD_TEST=1
commands =
  find . -type f -name "*.pyc" -delete
  bash -c "if [ ! -d .testrepository ]; then testr init; fi"
  sudo -E -g docker testr run test_build.DeployTestCentosSource
  sudo tests/deploy_aio.sh centos source

[testenv:deploy-ubuntu-source]
whitelist_externals = find
                      bash
                      sudo
setenv =
  DOCKER_BUILD_TEST=1
commands =
  find . -type f -name "*.pyc" -delete
  bash -c "if [ ! -d .testrepository ]; then testr init; fi"
  sudo -E -g docker testr run test_build.DeployTestUbuntuSource
  sudo tests/deploy_aio.sh ubuntu source

[testenv:deploy-multinode-ubuntu-source]
whitelist_externals = find
                      bash
                      sudo
setenv =
  DOCKER_BUILD_TEST=1
commands =
  find . -type f -name "*.pyc" -delete
  bash -c "if [ ! -d .testrepository ]; then testr init; fi"
  sudo -E -g docker testr run test_build.BuildTestUbuntuSource

[testenv:genconfig]
whitelist_externals = which
commands=
  oslo-config-generator --config-file etc/oslo-config-generator/kolla-build.conf

[flake8]
show-source = True
exclude=.eggs,.git,.tox,doc
