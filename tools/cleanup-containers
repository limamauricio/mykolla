#!/bin/bash
if [[ $(pgrep qemu) ]]; then
    echo "Some qemu processes were detected."
    echo "Docker will not be able to stop the nova_libvirt container with those running."
    echo "Please clean them up before rerunning this script."
    exit 1
fi

if [ -n "$1" ]; then
    containers_to_kill=($(docker ps | grep -E "$1" | awk '{print $1}'))
else
    containers_to_kill=(
        cinder_{volume,scheduler,backup,api} \
        glance_{api,registry} \
        haproxy \
        heat_{api{,_cfn},engine} \
        horizon \
        ironic-{discoverd,conductor,api,pxe} \
        keepalived \
        keystone \
        kolla_ansible \
        magnum_{api,conductor} \
        mariadb \
        memcached \
        mistral{api,engine,executor} \
	manila_{api,scheduler,share} \
	bootstrap_manila \
        murano_{api,engine} \
        neutron_{server,agents,linuxbridge_agent,openvswitch_agent} \
        nova_{scheduler,novncproxy,consoleauth,conductor,api,compute,libvirt,spicehtml5proxy,compute_ironic} \
        openvswitch_{vswitchd,db} \
        rabbitmq{,_data} \
        rsyslog \
        swift_{account_{auditor,reaper,replicator,server},container_{auditor,replicator,server,updater},object_{auditor,expirer,replicator,server,updater},proxy_server,rsyncd}
    )
fi

echo "Stopping containers..."
(docker stop -t 2 ${containers_to_kill[@]} 2>&1) > /dev/null

echo "Removing containers..."
(docker rm -v -f ${containers_to_kill[@]} 2>&1) > /dev/null

echo "All cleaned up!"
